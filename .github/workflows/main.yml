name: Build Polyglot Book from Best Games in the World

on:
  workflow_dispatch:

jobs:
  build-best-book:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # Download best games PGN from multiple valid ChessDB URLs
      - name: Download Best Games PGNs
        run: |
          mkdir -p book
          # World Champions
          curl -L "https://www.chessdb.cn/down/pgn/worldchamp.pgn" -o book/worldchamp.pgn
          # SuperGM games
          curl -L "https://www.chessdb.cn/down/pgn/supergm.pgn" -o book/supergm.pgn
          # Linares tournament (elite event)
          curl -L "https://www.chessdb.cn/down/pgn/linares.pgn" -o book/linares.pgn
          # Candidates tournaments
          curl -L "https://www.chessdb.cn/down/pgn/candidates.pgn" -o book/candidates.pgn
          # Top all games
          curl -L "https://www.chessdb.cn/down/pgn/topall.pgn" -o book/topall.pgn
          # Combine all PGNs into one
          cat book/worldchamp.pgn book/supergm.pgn book/linares.pgn book/candidates.pgn book/topall.pgn > book/best_games.pgn
          ls -lh book/

      - name: Install required tools
        run: |
          sudo apt-get update
          sudo apt-get install -y polyglot python3 python3-pip
          pip3 install python-chess tqdm

      # Filter for decisive, high-quality games only (e.g. >30 moves, not draws, both sides 2500+)
      - name: Filter PGN for best decisive games
        run: |
          python3 - <<'EOF'
          import chess.pgn

          INPUT_PGN = "book/best_games.pgn"
          OUTPUT_PGN = "book/best_decisive_games.pgn"
          MIN_MOVES = 30
          MIN_ELO = 2500

          def is_best_game(game):
              try:
                  white_elo = int(game.headers.get("WhiteElo", "0"))
                  black_elo = int(game.headers.get("BlackElo", "0"))
              except Exception:
                  white_elo = black_elo = 0
              result = game.headers.get("Result", "")
              if result not in ["1-0", "0-1"]:
                  return False
              if white_elo < MIN_ELO or black_elo < MIN_ELO:
                  return False
              moves = 0
              node = game
              while node.variations:
                  node = node.variation(0)
                  moves += 1
              if moves < MIN_MOVES:
                  return False
              return True

          with open(INPUT_PGN, "r", encoding="utf-8", errors="ignore") as inp, \
               open(OUTPUT_PGN, "w", encoding="utf-8") as outp:
              while True:
                  game = chess.pgn.read_game(inp)
                  if game is None:
                      break
                  if is_best_game(game):
                      outp.write(str(game) + "\n\n")
          EOF

      - name: Generate Polyglot .bin book (up to move 50)
        run: |
          polyglot make-book \
            -pgn book/best_decisive_games.pgn \
            -bin book/world_best_book.bin \
            -min-game 1 \
            -max-ply 100 \
            -quiet

      - name: Commit and push .bin to repository
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add book/world_best_book.bin
          git commit -m "Update Polyglot book from world's best games (decisive, top Elo, up to move 50, multi-URL)" || echo "No changes to commit"
          git push
